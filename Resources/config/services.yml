services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
      # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.


  aropixel.page.form.factory:
    class: Aropixel\PageBundle\Form\FormFactory
    arguments: ['@form.factory']
    public: true

  Aropixel\PageBundle\Factory\FieldFactory:
    autowire: true

  Aropixel\PageBundle\Form\DataMapper\PageFieldDataMapper:
    autowire: true

  Aropixel\PageBundle\Form\FormFactoryInterface: '@aropixel.page.form.factory'


  Aropixel\PageBundle\Http\:
    resource: '../../Http'
    tags: [ 'controller.service_arguments' ]

  aropixel.page.form.default:
    class: '%aropixel_page.form.default%'
    arguments: ['@security.authorization_checker', '@Aropixel\PageBundle\Form\DataMapper\PageFieldDataMapper', '@parameter_bag', '%aropixel_page.entities%']
    tags: ['aropixel.page.form']

  Aropixel\PageBundle\Repository\:
    resource: '../../Repository'
    autowire: true
    tags: ['doctrine.repository_service']

  Aropixel\PageBundle\Twig\FieldExtension:
      tags: ['twig.extension']


  Aropixel\PageBundle\EventListener\DoFileCropListener:
    arguments: ['@Aropixel\AdminBundle\Image\Cropper']
    tags:
      - { name: doctrine.event_listener, event: postPersist }
      - { name: doctrine.event_listener, event: postUpdate }
